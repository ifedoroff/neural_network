import org.apache.tools.ant.filters.ReplaceTokens
buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: "org.springframework.boot"

group 'com.ifedorov'
version '1.2'

sourceCompatibility = 1.8


repositories {
    mavenCentral()
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    compile project(':train')
}

task processBatchFiles(type: ProcessResources) {
    from 'examples', {
        include "*.bat"
    }
    destinationDir file("$buildDir/examples")
    filter ReplaceTokens, tokens: [
            "project.version": project.version
    ]
}

task copyExamples(type: Copy) {
    from 'examples', {
        exclude "*.bat"
    }
    destinationDir file("$buildDir/examples")
}

bootJar {
    archiveBaseName = 'neural_network_web'
    archiveVersion = "${project.version}"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

task copyTrainJar(type: Copy) {
    from configurations.compile, {
        include 'train-*.jar'
    }
    into "$buildDir/libs"
}

task pack(type: Zip, dependsOn: 'build') {
    archiveFileName = "neural-network-${project.version}.zip"
    destinationDirectory = file("$buildDir")
    from "$buildDir/libs", {
        into 'libs'
    }
    from "$buildDir/examples"
}


bootJar.mustRunAfter clean
copyTrainJar.mustRunAfter clean
processBatchFiles.mustRunAfter clean
copyExamples.mustRunAfter clean
build.dependsOn bootJar
build.dependsOn copyTrainJar
build.dependsOn processBatchFiles
build.dependsOn copyExamples